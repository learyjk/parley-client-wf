{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["interface CarrierData {\n    CONTR_SUBST_AC: boolean;\n    CONTR_SUBST_INSP_W_VIOL: number;\n    CONTR_SUBST_MEASURE: number;\n    DOT_NUMBER: number;\n    DRIVER_INSP_TOTAL: number;\n    DRIVER_OOS_INSP_TOTAL: number;\n    DRIV_FIT_AC: boolean;\n    DRIV_FIT_INSP_W_VIOL: number;\n    DRIV_FIT_MEASURE: number;\n    HOS_DRIV_AC: boolean;\n    HOS_DRIV_INSP_W_VIOL: number;\n    HOS_DRIV_MEASURE: number;\n    INSP_TOTAL: number;\n    UNSAFE_DRIV_AC: boolean;\n    UNSAFE_DRIV_INSP_W_VIOL: number;\n    UNSAFE_DRIV_MEASURE: number;\n    VEHICLE_INSP_TOTAL: number;\n    VEHICLE_OOS_INSP_TOTAL: number;\n    VEH_MAINT_AC: boolean;\n    VEH_MAINT_INSP_W_VIOL: number;\n    VEH_MAINT_MEASURE: number;\n}\n\n\nconst init = async () => {\n    // select UI elements\n    const targets: NodeList = document.querySelectorAll('[parley-target]')\n    const loader = document.querySelector<HTMLDivElement>('[data-parley=\"loader\"]')\n    if (!loader) return\n\n    // listen for form submission\n    const form = document.querySelector(\"form\");\n    if (!form) return;\n\n    // define data fetching function\n    const getData = async (num): Promise<CarrierData | null> => {\n        try {\n            const response = await fetch(\n                `https://parley-api-2gajsirgta-uc.a.run.app/${num}`\n            );\n            if (response.status === 404) {\n                alert(`No records found for DOT Number ${num}`)\n                return null\n            }\n            const data: CarrierData = await response.json();\n            return data\n        } catch (error) {\n            console.log({ error });\n            return null\n        }\n    }\n\n    // UI updating function\n    const updateUI = (data: CarrierData) => {\n        targets.forEach((target) => {\n            let val = data[String((<Element>target).getAttribute('parley-target'))]\n            if (typeof val === \"string\") {\n                val = \"false\" ? \"NO\" : \"YES\"\n            }\n            target.textContent = val\n        })\n    }\n\n    // function to run on form submit\n    const formSubmit = async (event) => {\n        event.preventDefault();\n        const dotNumber = form.querySelector<HTMLInputElement>('[parley-form=\"dot-number\"]')?.value\n        // call getData for DOT Number submitted through form\n        loader.classList.add('is-visible')\n        const data = await getData(dotNumber)\n        // Update UI\n        if (!data) {\n            console.log('error getting carrier data!')\n        } else {\n            updateUI(data)\n        }\n        setTimeout(() => {\n            loader.classList.remove('is-visible')\n        }, 1000)\n\n    };\n    form.addEventListener(\"submit\", formSubmit);\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", init);\n"],
  "mappings": ";;AAyBA,MAAM,OAAO,YAAY;AAErB,UAAM,UAAoB,SAAS,iBAAiB,iBAAiB;AACrE,UAAM,SAAS,SAAS,cAA8B,wBAAwB;AAC9E,QAAI,CAAC;AAAQ;AAGb,UAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,QAAI,CAAC;AAAM;AAGX,UAAM,UAAU,OAAO,QAAqC;AACxD,UAAI;AACA,cAAM,WAAW,MAAM;AAAA,UACnB,8CAA8C;AAAA,QAClD;AACA,YAAI,SAAS,WAAW,KAAK;AACzB,gBAAM,mCAAmC,KAAK;AAC9C,iBAAO;AAAA,QACX;AACA,cAAM,OAAoB,MAAM,SAAS,KAAK;AAC9C,eAAO;AAAA,MACX,SAAS,OAAP;AACE,gBAAQ,IAAI,EAAE,MAAM,CAAC;AACrB,eAAO;AAAA,MACX;AAAA,IACJ;AAGA,UAAM,WAAW,CAAC,SAAsB;AACpC,cAAQ,QAAQ,CAAC,WAAW;AACxB,YAAI,MAAM,KAAK,OAAiB,OAAQ,aAAa,eAAe,CAAC;AACrE,YAAI,OAAO,QAAQ,UAAU;AACzB,gBAAM,UAAU,OAAO;AAAA,QAC3B;AACA,eAAO,cAAc;AAAA,MACzB,CAAC;AAAA,IACL;AAGA,UAAM,aAAa,OAAO,UAAU;AAChC,YAAM,eAAe;AACrB,YAAM,YAAY,KAAK,cAAgC,4BAA4B,GAAG;AAEtF,aAAO,UAAU,IAAI,YAAY;AACjC,YAAM,OAAO,MAAM,QAAQ,SAAS;AAEpC,UAAI,CAAC,MAAM;AACP,gBAAQ,IAAI,6BAA6B;AAAA,MAC7C,OAAO;AACH,iBAAS,IAAI;AAAA,MACjB;AACA,iBAAW,MAAM;AACb,eAAO,UAAU,OAAO,YAAY;AAAA,MACxC,GAAG,GAAI;AAAA,IAEX;AACA,SAAK,iBAAiB,UAAU,UAAU;AAAA,EAC9C;AAEA,WAAS,iBAAiB,oBAAoB,IAAI;",
  "names": []
}
