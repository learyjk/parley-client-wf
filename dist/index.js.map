{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["interface CarrierData {\n    CONTR_SUBST_AC: boolean;\n    CONTR_SUBST_INSP_W_VIOL: number;\n    CONTR_SUBST_MEASURE: number;\n    DOT_NUMBER: number;\n    DRIVER_INSP_TOTAL: number;\n    DRIVER_OOS_INSP_TOTAL: number;\n    DRIV_FIT_AC: boolean;\n    DRIV_FIT_INSP_W_VIOL: number;\n    DRIV_FIT_MEASURE: number;\n    HOS_DRIV_AC: boolean;\n    HOS_DRIV_INSP_W_VIOL: number;\n    HOS_DRIV_MEASURE: number;\n    INSP_TOTAL: number;\n    UNSAFE_DRIV_AC: boolean;\n    UNSAFE_DRIV_INSP_W_VIOL: number;\n    UNSAFE_DRIV_MEASURE: number;\n    VEHICLE_INSP_TOTAL: number;\n    VEHICLE_OOS_INSP_TOTAL: number;\n    VEH_MAINT_AC: boolean;\n    VEH_MAINT_INSP_W_VIOL: number;\n    VEH_MAINT_MEASURE: number;\n}\n\nconst buildTargets = () => {\n    const targets = document.querySelectorAll('[parley-target]')\n    const result = new Map()\n\n    targets.forEach((target) => {\n        result.set(target.getAttribute('parley-target'), target.textContent)\n    })\n\n    return result;\n}\n\nconst init = async () => {\n    console.log(\"init called\");\n\n    //const targets = buildTargets()\n    const targets: NodeList = document.querySelectorAll('[parley-target]')\n    console.log({ targets })\n\n    // listen for form submission\n    const form = document.querySelector(\"form\");\n    if (!form) return;\n    const getData = async (num): Promise<CarrierData | null> => {\n        console.log('getData for num:', num)\n        try {\n            const response = await fetch(\n                `https://parley-api-2gajsirgta-uc.a.run.app/${num}`\n            );\n            if (response.status === 404) {\n                alert(`No records found for DOT Number ${num}`)\n                return null\n            }\n            const data: CarrierData = await response.json();\n            return data\n        } catch (error) {\n            console.log({ error });\n            return null\n        }\n    }\n\n    const updateUI = (data: CarrierData) => {\n\n        targets.forEach((target) => {\n            target.textContent = data[String((<Element>target).getAttribute('parley-target'))]\n        })\n    }\n\n    const formSubmit = async (event) => {\n        console.log(\"form submit\");\n        event.preventDefault();\n        const dotNumber = form.querySelector<HTMLInputElement>('[parley-form=\"dot-number\"]')?.value\n        // call getData for DOT Number submitted through form\n        const data = await getData(dotNumber)\n        console.log({ data })\n        // Update UI\n        if (!data) {\n            console.log('error getting carrier data!')\n        } else {\n            updateUI(data)\n        }\n    };\n\n    form.addEventListener(\"submit\", formSubmit);\n\n\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", init);\n"],
  "mappings": ";;AAmCA,MAAM,OAAO,YAAY;AACrB,YAAQ,IAAI,aAAa;AAGzB,UAAM,UAAoB,SAAS,iBAAiB,iBAAiB;AACrE,YAAQ,IAAI,EAAE,QAAQ,CAAC;AAGvB,UAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,QAAI,CAAC;AAAM;AACX,UAAM,UAAU,OAAO,QAAqC;AACxD,cAAQ,IAAI,oBAAoB,GAAG;AACnC,UAAI;AACA,cAAM,WAAW,MAAM;AAAA,UACnB,8CAA8C;AAAA,QAClD;AACA,YAAI,SAAS,WAAW,KAAK;AACzB,gBAAM,mCAAmC,KAAK;AAC9C,iBAAO;AAAA,QACX;AACA,cAAM,OAAoB,MAAM,SAAS,KAAK;AAC9C,eAAO;AAAA,MACX,SAAS,OAAP;AACE,gBAAQ,IAAI,EAAE,MAAM,CAAC;AACrB,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,UAAM,WAAW,CAAC,SAAsB;AAEpC,cAAQ,QAAQ,CAAC,WAAW;AACxB,eAAO,cAAc,KAAK,OAAiB,OAAQ,aAAa,eAAe,CAAC;AAAA,MACpF,CAAC;AAAA,IACL;AAEA,UAAM,aAAa,OAAO,UAAU;AAChC,cAAQ,IAAI,aAAa;AACzB,YAAM,eAAe;AACrB,YAAM,YAAY,KAAK,cAAgC,4BAA4B,GAAG;AAEtF,YAAM,OAAO,MAAM,QAAQ,SAAS;AACpC,cAAQ,IAAI,EAAE,KAAK,CAAC;AAEpB,UAAI,CAAC,MAAM;AACP,gBAAQ,IAAI,6BAA6B;AAAA,MAC7C,OAAO;AACH,iBAAS,IAAI;AAAA,MACjB;AAAA,IACJ;AAEA,SAAK,iBAAiB,UAAU,UAAU;AAAA,EAG9C;AAEA,WAAS,iBAAiB,oBAAoB,IAAI;",
  "names": []
}
